Index: handlers/user.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import asyncio\nimport datetime\nimport logging\n\nfrom aiogram import types\nfrom aiogram.contrib.fsm_storage.memory import MemoryStorage\nfrom aiogram.dispatcher import FSMContext\nfrom aiogram.dispatcher.filters import ChatTypeFilter\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\nfrom apscheduler.triggers.cron import CronTrigger\n\nfrom config import *\nfrom keyboards import inline_keyboards as kb\nfrom log.logger import custom_formatter\nfrom main import dp, bot, _\nfrom messages import bot_messages as bm\nfrom middlewares.throttling_middleware import rate_limit\nfrom services import DataBase\n\nstorage = MemoryStorage()\n\ndb = DataBase('services/jokes.db')\n\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.INFO)\n\nhandler = logging.FileHandler(\"log/bot_log.log\")\nhandler.setFormatter(custom_formatter)\n\nlogger.addHandler(handler)\n\n\nasync def update_info(message: types.Message):\n    user_id = message.from_user.id\n    user_name = message.from_user.full_name\n    user_username = message.from_user.username\n    result = await db.user_exist(user_id)\n    if result:\n        await db.user_update_name(user_id, user_name, user_username)\n    else:\n        await db.add_users(user_id, user_name, user_username, \"private\", \"uk\", 'user')\n\n\n@dp.message_handler(content_types=['new_chat_members'])\nasync def send_welcome(message: types.Message):\n    bot_obj = await bot.get_me()\n    bot_id = bot_obj.id\n\n    for chat_member in message.new_chat_members:\n        chat_info = await bot.get_chat(message.chat.id)\n        chat_type = \"public\"\n        user_id = message.chat.id\n        user_name = None\n        user_username = None\n        language = None\n        status = None\n\n        await db.add_users(user_id, user_name, user_username, chat_type, language, status)\n\n        chat_title = chat_info.title\n        if chat_member.id == bot_id:\n            await bot.send_message(\n                chat_id=message.chat.id,\n                text=bm.join_group(chat_title),\n                parse_mode=\"Markdown\")\n\n\n@rate_limit(1)\n@dp.message_handler(commands=['start'])\nasync def send_welcome(message: types.Message):\n    user_id = message.from_user.id\n    user_name = message.from_user.full_name\n\n    await dp.bot.send_chat_action(message.chat.id, \"typing\")\n    logging.info(f\"User action: /start (User ID: {user_id})\")\n\n    await message.reply(bm.welcome_message(user_name))\n    await message.answer(bm.pres_button(),\n                         reply_markup=kb.random_keyboard())\n\n    if 'bug' in message.get_args().lower():\n        # Відправка привітання і повідомлення з кнопкою\n        await message.answer(\n            _('If you want to offer an anecdote or if you find a bug, please click the button below and describe it.'),\n            reply_markup=kb.return_feedback_button())\n\n    await update_info(message)\n\n\n@rate_limit(1)\n@dp.message_handler(commands=['language'])\nasync def change_lang(message: types.Message):\n    user_id = message.from_user.id\n\n    await bot.send_chat_action(user_id, 'typing')\n    await asyncio.sleep(0.5)\n\n    await message.reply(bm.please_choose(),\n                        reply_markup=kb.lang_keyboard, parse_mode=\"Markdown\")\n\n\n@dp.callback_query_handler(lambda call: call.data.startswith('lang_'))\nasync def language_callback(call: types.CallbackQuery):\n    user_id = call.from_user.id\n    language = call.data.split('_')[1]\n    await bot.send_chat_action(user_id, 'typing')\n    await asyncio.sleep(0.5)\n    await call.message.edit_text(text=bm.choose_lan(language))\n\n    await db.set_language(user_id, language)\n    await update_info(call.message)\n\n\n@dp.message_handler(commands=['info'])\nasync def info(message: types.Message):\n    await dp.bot.send_chat_action(message.chat.id, \"typing\")\n    user_id = message.from_user.id\n\n    table_name = f\"jokes_uk\"\n\n    logging.info(f\"User action: /info (User ID: {user_id})\")\n\n    joke_sent = await db.joke_sent(user_id)\n    joke_count = await db.joke_count(table_name)\n    sent_count = await db.sent_count()\n\n    username = message.from_user.first_name\n\n    await message.reply(bm.user_info(username, joke_sent, joke_count, sent_count),\n                        reply_markup=kb.return_feedback_button())\n    await update_info(message)\n\n\n@rate_limit(1)\n@dp.message_handler(commands=['help'])\nasync def send_help(message: types.Message):\n    await dp.bot.send_chat_action(message.chat.id, \"typing\")\n\n    user_id = message.from_user.id\n\n    logging.info(f\"User action: /help (User ID: {user_id})\")\n\n    await message.reply(bm.help_message())\n    await update_info(message)\n\n\n@dp.message_handler(commands=['joke'])\n@rate_limit(1)\nasync def handle_joke(message: types.Message):\n    await dp.bot.send_chat_action(message.chat.id, \"typing\")\n\n    user_id = message.from_user.id\n\n    logging.info(f\"User action: /joke (User ID: {user_id})\")\n\n    await message.reply(bm.pres_button(),\n                        reply_markup=kb.random_keyboard())\n    await update_info(message)\n\n\n@dp.callback_query_handler(lambda call: call.data == 'feedback')\n@rate_limit(1)\nasync def feedback_handler(call: types.CallbackQuery):\n    await update_info(call.message)\n    await call.message.delete()\n    await call.message.answer(_('Please enter your message:'), reply_markup=kb.cancel_keyboard())\n    await dp.current_state().set_state(\"send_feedback\")\n    await update_info(call.message)\n\n\n@dp.message_handler(state=\"send_feedback\")\nasync def feedback(message: types.Message, state: FSMContext):\n    feedback_message = message.text\n    feedback_message_id = message.message_id\n    feedback_message_chat_id = message.chat.id\n    user_id = message.from_user.id\n    user_username = message.from_user.username\n\n    if feedback_message == _(\"↩\uFE0FCancel\"):\n        await bot.send_message(message.chat.id,\n                               _('Action canceled!'),\n                               reply_markup=types.ReplyKeyboardRemove())\n        await state.finish()\n        await info(message)\n        return\n\n    if user_username is not None:\n        user = \"@\" + user_username\n    else:\n        user = user_id\n\n    await state.finish()\n\n    await bot.send_message(chat_id=admin_id, text=bm.feedback_message_send(user, feedback_message),\n                           reply_markup=kb.feedback_answer(feedback_message_id, feedback_message_chat_id),\n                           parse_mode=\"Markdown\")\n\n    await message.answer(\n        _(\"Your message *{feedback_message_id}* sent!\").format(feedback_message_id=feedback_message_id),\n        reply_markup=types.ReplyKeyboardRemove())\n    await update_info(message)\n\n\n@dp.callback_query_handler(lambda call: call.data == \"select_category\")\nasync def select_category(call):\n    await call.message.edit_text(text=_('Please select what you would like to joke about:'), reply_markup=kb.category_keyboard())\n\n\n@dp.callback_query_handler(lambda call: call.data == \"back_to_random\")\nasync def back_to_random(call):\n    await call.message.edit_text(bm.pres_button(), reply_markup=kb.random_keyboard())\n\n\n@dp.callback_query_handler(lambda call: call.data.startswith('joke:'))\nasync def send_category_joke_pivate(call):\n    tag = call.data.split(':')[1]\n    chat_id = call.message.chat.id\n    user_id = call.from_user.id\n\n    table_name = f\"jokes_uk\"\n\n    result = await db.get_tagged_joke(user_id, table_name, tag)\n\n    await dp.bot.send_chat_action(call.message.chat.id, \"typing\")\n\n    if not result:\n        await bot.send_message(\n            chat_id, bm.all_send())\n    else:\n        joke = result[0]\n\n        joke_id = joke[0]\n\n        joke_text = joke[1]\n\n        tags = await db.get_tags(joke_id)\n\n        table_name = 'jokes_uk'\n\n        joke_rate = await db.joke_rate(joke_id, table_name)\n\n        if tags is not None:\n            tags_list = tags.split(', ')\n            formatted_tags = [tag.replace(\"_\", \"\\_\") for tag in tags_list]\n            tagged_tags = ' '.join([f'#{tag}' for tag in formatted_tags])\n            joke = f'{joke_text}\\n\\n{tagged_tags}'\n        else:\n            joke = joke_text\n\n        keyboard_type = kb.return_rating_keyboard(joke_rate)\n\n        if call.message.chat.type == \"private\":\n            keyboard_type = kb.return_rate_keyboard(joke_id)\n\n        await call.message.edit_text(joke, reply_markup=keyboard_type)\n\n        await db.seen_joke(joke_id, user_id)\n\n        logging.info(\n            f\"User action: Sent joke (User ID: {user_id}, Joke ID: {joke[0]})\")\n\n    await bot.send_message(chat_id,\n                           text=bm.pres_button(),\n                           reply_markup=kb.random_keyboard())\n    await update_info(call.message)\n\n\n@dp.callback_query_handler(lambda call: call.data == 'random_joke')\nasync def send_joke_private(call):\n    chat_id = call.message.chat.id\n    user_id = call.from_user.id\n\n    table_name = f\"jokes_uk\"\n\n    result = await db.get_joke(user_id, table_name)\n\n    await dp.bot.send_chat_action(call.message.chat.id, \"typing\")\n\n    if not result:\n        await bot.send_message(\n            chat_id, bm.all_send())\n    else:\n        joke = result[0]\n\n        joke_id = joke[0]\n\n        joke_text = joke[1]\n\n        tags = await db.get_tags(joke_id)\n\n        table_name = 'jokes_uk'\n\n        joke_rate = await db.joke_rate(joke_id, table_name)\n\n        if tags is not None:\n            formatted_tags = tags.replace(\"_\", \"\\_\")\n            tagged_tags = f'#{formatted_tags}'\n            joke = f'{joke_text}\\n\\n{tagged_tags}'\n        else:\n            joke = joke_text\n\n        keyboard_type = kb.return_rating_keyboard(joke_rate)\n\n        if call.message.chat.type == \"private\":\n            keyboard_type = kb.return_rate_keyboard(joke_id)\n\n        await call.message.edit_text(joke, reply_markup=keyboard_type)\n\n        await db.seen_joke(joke_id, user_id)\n\n        logging.info(\n            f\"User action: Sent joke (User ID: {user_id}, Joke ID: {joke[0]})\")\n\n    await bot.send_message(chat_id,\n                           text=bm.pres_button(),\n                           reply_markup=kb.random_keyboard())\n    await update_info(call.message)\n\n\nscheduler = AsyncIOScheduler()\n\n\n@scheduler.scheduled_job(CronTrigger(hour=12))\nasync def job():\n    print(\">>>>\", datetime.datetime.now())\n    users = await db.get_private_users()\n    await bot.send_message(chat_id=admin_id, text=bm.start_mailing())\n    for user in users:\n        chat_id = user[0]\n        try:\n\n            table_name = f\"jokes_uk\"\n\n            result = await db.get_joke(chat_id, table_name)\n\n            if not result:\n                continue\n\n            joke = result[0]\n\n            joke_id = joke[0]\n\n            joke_text = joke[1]\n\n            tags = await db.get_tags(joke_id)\n\n            if tags is not None:\n                formatted_tags = tags.replace(\"_\", \"\\_\")\n                tagged_tags = f'#{formatted_tags}'\n                joke = f'{joke_text}\\n\\n{tagged_tags}'\n            else:\n                joke = joke_text\n\n            await bot.send_message(\n                chat_id=user[0],\n                text=bm.daily_joke(joke),\n                parse_mode=\"Markdown\",\n                reply_markup=kb.return_rate_keyboard(joke[0]))\n\n            await db.seen_joke(joke[0], chat_id)\n\n            logging.info(f\"Sent daily joke to user {chat_id}\")\n        except Exception as e:\n            logging.error(f\"Error sending message to user {chat_id}: {str(e)}\")\n            continue\n\n    await bot.send_message(chat_id=admin_id, text=bm.finish_mailing())\n\n\n@dp.callback_query_handler(lambda call: call.data.startswith('seen_'))\nasync def seen_handling(call: types.CallbackQuery):\n    joke_id = int(call.data.split('_')[1])\n    user_id = call.from_user.id\n\n    existing_row = await db.check_seen_joke(joke_id, user_id)\n\n    if existing_row:\n        await call.answer(bm.already_seen_joke())\n    else:\n        await db.seen_joke(joke_id, user_id)\n        await call.answer(bm.seen_joke())\n\n    joke_seens = await db.joke_seens(joke_id)\n\n    logging.info(\n        f\"User action: Marked joke as seen (User ID: {user_id}, Joke ID: {joke_id})\"\n    )\n\n    await bot.edit_message_reply_markup(\n        call.message.chat.id,\n        call.message.message_id,\n        reply_markup=kb.return_seen_count_rate_keyboard(\n            joke_seens, joke_id))\n    await asyncio.sleep(3)\n    await bot.edit_message_reply_markup(\n        call.message.chat.id,\n        call.message.message_id,\n        reply_markup=kb.return_seen_rate_keyboard(joke_id))\n    await update_info(call.message)\n\n\n@dp.callback_query_handler(lambda call: call.data.startswith('seeen_'))\nasync def seen_button_handling(call: types.CallbackQuery):\n    await call.answer(bm.already_seen_joke())\n    await update_info(call.message)\n\n\n@dp.callback_query_handler(lambda call: call.data.startswith('like_'))\nasync def like_joke(call: types.CallbackQuery):\n    joke_id = int(call.data.split('_')[1])\n    user_id = call.from_user.id\n\n    table_name = f\"jokes_uk\"\n\n    await db.like_joke(joke_id, table_name)\n\n    joke_rate = await db.joke_rate(joke_id, table_name)\n\n    await call.answer(bm.liked_joke())\n\n    await call.message.edit_reply_markup(\n        reply_markup=kb.return_rating_keyboard(joke_rate))\n    await asyncio.sleep(5)\n    await call.message.edit_reply_markup(\n        reply_markup=kb.return_hidden_rating_keyboard(joke_id))\n    await update_info(call.message)\n\n    logging.info(\n        f\"User action: Liked joke (User ID: {user_id}, Joke ID: {joke_id})\")\n\n\n# noinspection PyArgumentList\n@dp.callback_query_handler(lambda call: call.data.startswith('dislike_'))\nasync def dislike_joke(call: types.CallbackQuery):\n    joke_id = int(call.data.split('_')[1])\n    user_id = call.from_user.id\n\n    table_name = f\"jokes_uk\"\n\n    await db.dislike_joke(joke_id, table_name)\n\n    joke_rate = await db.joke_rate(joke_id, table_name)\n\n    await call.answer(bm.disliked_joke())\n    await call.message.edit_reply_markup(\n        reply_markup=kb.return_rating_keyboard(joke_rate))\n    await asyncio.sleep(5)\n    await call.message.edit_reply_markup(\n        reply_markup=kb.return_hidden_rating_keyboard(joke_id))\n    await update_info(call.message)\n\n    logging.info(\n        f\"User action: Disliked joke (User ID: {user_id}, Joke ID: {joke_id})\")\n\n\n# noinspection PyArgumentList\n@dp.callback_query_handler(ChatTypeFilter(types.ChatType.PRIVATE),\n                           lambda call: call.data.startswith('rate_'))\nasync def rate_joke_private(call: types.CallbackQuery):\n    joke_id = int(call.data.split('_')[1])\n\n    table_name = f\"jokes_uk\"\n\n    joke_rate = await db.joke_rate(joke_id, table_name)\n\n    await bot.answer_callback_query(call.id, bm.joke_rating(joke_rate))\n\n    await bot.edit_message_reply_markup(\n        call.message.chat.id,\n        call.message.message_id,\n        reply_markup=kb.return_rating_keyboard(joke_rate))\n    await asyncio.sleep(5)\n    await bot.edit_message_reply_markup(\n        call.message.chat.id,\n        call.message.message_id,\n        reply_markup=kb.return_hidden_rating_keyboard(joke_id))\n\n\n@dp.callback_query_handler(\n    ChatTypeFilter(types.ChatType.GROUP)\n    | ChatTypeFilter(types.ChatType.SUPERGROUP),\n    lambda call: call.data.startswith('rate_'))\nasync def rate_joke_group(call: types.CallbackQuery):\n    joke_id = int(call.data.split('_')[1])\n\n    table_name = f\"jokes_uk\"\n\n    joke_rate = await db.joke_rate(joke_id, table_name)\n\n    await bot.answer_callback_query(call.id, bm.joke_rating(joke_rate))\n\n    await bot.edit_message_reply_markup(\n        call.message.chat.id,\n        call.message.message_id,\n        reply_markup=kb.return_rating_and_seen_keyboard(\n            joke_rate, joke_id))\n    await asyncio.sleep(5)\n    await bot.edit_message_reply_markup(\n        call.message.chat.id,\n        call.message.message_id,\n        reply_markup=kb.return_seen_rate_keyboard(joke_id))\n\n\n@dp.callback_query_handler(lambda call: call.data.startswith('rating_'))\nasync def joke_rating(call: types.CallbackQuery):\n    joke_id = int(call.data.split('_')[1])\n\n    table_name = \"jokes_uk\"\n\n    joke_rate = await db.joke_rate(joke_id, table_name)\n\n    await bot.answer_callback_query(call.id, bm.joke_rating(joke_rate))\n\n\n@dp.message_handler()\nasync def handle_message(message: types.Message):\n    text = message.text.lower()\n    name = message.from_user.full_name\n\n    if \"допомога\" in text or \"хелп\" in text or \"help\" in text:\n        await message.reply(bm.help_message())\n\n    elif message.chat.type == 'private':\n        await message.reply(bm.dont_understood(name), reply_markup=kb.return_feedback_button(), parse_mode=\"Markdown\")\n\n    elif message.chat.type == 'group' or message.chat.type == 'supergroup':\n        pass\n    await update_info(message)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/handlers/user.py b/handlers/user.py
--- a/handlers/user.py	
+++ b/handlers/user.py	
@@ -247,7 +247,7 @@
         else:
             joke = joke_text
 
-        keyboard_type = kb.return_rating_keyboard(joke_rate)
+        keyboard_type = kb.return_rating_and_seen_keyboard(joke_rate, joke_id)
 
         if call.message.chat.type == "private":
             keyboard_type = kb.return_rate_keyboard(joke_id)
@@ -299,7 +299,7 @@
         else:
             joke = joke_text
 
-        keyboard_type = kb.return_rating_keyboard(joke_rate)
+        keyboard_type = kb.return_rating_and_seen_keyboard(joke_rate, joke_id)
 
         if call.message.chat.type == "private":
             keyboard_type = kb.return_rate_keyboard(joke_id)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"868e1bc7-d2cf-4321-8444-628b09c4cc27\" name=\"Changes\" comment=\"deleted en jokes\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/Joke Bot 2.0.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/Joke Bot 2.0.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/handlers/user.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/handlers/user.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/keyboards/inline_keyboards.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/keyboards/inline_keyboards.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.mo\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.mo\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.po\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.po\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/locales/jokebot.pot\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/locales/jokebot.pot\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.mo\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.mo\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.po\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.po\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/log/bot_log.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/log/bot_log.log\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/middlewares/throttling_middleware.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/middlewares/throttling_middleware.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/services/db.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/services/db.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/services/jokes.db\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/services/jokes.db\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 4\n}</component>\n  <component name=\"ProjectId\" id=\"2RcTtVY5tu3XFsL95MCh8LUsjl2\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"deletionFromPopupRequiresConfirmation\": \"false\",\n    \"git-widget-placeholder\": \"master\",\n    \"last_opened_file_path\": \"/Users/makser/Desktop/Python/Joke-Bot\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"Push.Settings\">\n    <force-push-targets>\n      <force-push-target remote-path=\"origin\" branch=\"main\" />\n    </force-push-targets>\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Python\\Joke Bot 2.0\\services\" />\n      <recent name=\"C:\\Python\\Joke Bot 2.0\\locales\\uk\\LC_MESSAGES\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"Joke Bot 2.0\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"admin_id\" value=\"6013011895\" />\n        <env name=\"token\" value=\"6293095869:AAGxVF6RqdI1mZYO6WLiY1y8ul0JYddG1o0\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"SDK_NAME\" value=\"Python 3.9 (Joke-Bot)\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"868e1bc7-d2cf-4321-8444-628b09c4cc27\" name=\"Changes\" comment=\"\" />\n      <created>1687548587521</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1687548587521</updated>\n      <workItem from=\"1692177109785\" duration=\"800000\" />\n      <workItem from=\"1692607361791\" duration=\"14000\" />\n      <workItem from=\"1692607406678\" duration=\"581000\" />\n      <workItem from=\"1692622775049\" duration=\"13000\" />\n      <workItem from=\"1692623430701\" duration=\"708000\" />\n      <workItem from=\"1692624201244\" duration=\"56000\" />\n      <workItem from=\"1692624438386\" duration=\"106000\" />\n      <workItem from=\"1692624581481\" duration=\"762000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"UPDATE main.py\">\n      <created>1687548643088</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687548643088</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"UPDATE main.py\">\n      <created>1687551110578</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687551110578</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"UPDATE main.py\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1687605559605</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687605559605</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"ADD i18n and english, ukraine languages\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1687695722220</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687695722220</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"ADD i18n and english, ukraine languages\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1687695736719</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687695736719</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"ADD i18n and english, ukraine languages\">\n      <created>1688392132379</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1688392132379</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"UPDATE main.py\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1688719148799</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1688719148799</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"UPDATE main.py\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690473848242</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690473848242</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"UPDATE locales\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690478273383</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690478273383</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"UPDATE languages\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690537270737</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690537270737</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"UPDATE README.md\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690539144863</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690539144863</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"UPDATE README.md\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690539895413</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690539895413</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"UPDATE logging\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690540000635</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690540000635</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"UPDATE ban system\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690541825031</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690541825031</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"UPDATE ban system ADD ban reason\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690544452438</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690544452438</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"ADD feedback system\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690551844340</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690551844340</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"ADD feedback system\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690552542356</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690552542356</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"small bug fix\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690552934888</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690552934888</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"small bug fix\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690553497453</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690553497453</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"bug fix\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690571508242</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690571508242</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"small update\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1690912096041</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1690912096041</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"ADD sending message to user as bot\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691051811150</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691051811150</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Added .gitignore\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691064585799</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691064585799</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Added speedtest\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691156462379</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691156462379</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"start working at bug report system\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691162903181</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691162903181</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Bug report system done\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691400907777</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691400907777</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"Bug report system done\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691413304347</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691413304347</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"update some translations\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691413767658</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691413767658</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"update some translations\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691413785017</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691413785017</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"update some translations\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691413789044</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691413789044</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"update some translations\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691425992141</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691425992141</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"update some translations\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691426237715</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691426237715</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"update some translations\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1692177223806</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1692177223806</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"update bot site link\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1692177706098</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1692177706098</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"deleted en jokes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1692607971379</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1692607971379</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"36\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"UnknownFeatures\">\n    <option featureType=\"dependencySupport\" implementationName=\"executable:docker\" />\n    <option featureType=\"dependencySupport\" implementationName=\"executable:kubectl\" />\n    <option featureType=\"com.intellij.fileTypeFactory\" implementationName=\"*.log\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"main\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"Update index.html\" />\n    <MESSAGE value=\"ADD i18n and english, ukraine languages\" />\n    <MESSAGE value=\"UPDATE main.py\" />\n    <MESSAGE value=\"UPDATE locales\" />\n    <MESSAGE value=\"UPDATE languages\" />\n    <MESSAGE value=\"UPDATE README.md\" />\n    <MESSAGE value=\"UPDATE logging\" />\n    <MESSAGE value=\"UPDATE ban system\" />\n    <MESSAGE value=\"UPDATE ban system ADD ban reason\" />\n    <MESSAGE value=\"ADD feedback system\" />\n    <MESSAGE value=\"small bug fix\" />\n    <MESSAGE value=\"bug fix\" />\n    <MESSAGE value=\"small update\" />\n    <MESSAGE value=\"ADD sending message to user as bot\" />\n    <MESSAGE value=\"Added .gitignore\" />\n    <MESSAGE value=\"Added speedtest\" />\n    <MESSAGE value=\"start working at bug report system\" />\n    <MESSAGE value=\"Bug report system done\" />\n    <MESSAGE value=\"update some translations\" />\n    <MESSAGE value=\"update bot site link\" />\n    <MESSAGE value=\"deleted en jokes\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"deleted en jokes\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,21 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="868e1bc7-d2cf-4321-8444-628b09c4cc27" name="Changes" comment="deleted en jokes">
-      <change beforePath="$PROJECT_DIR$/.idea/Joke Bot 2.0.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Joke Bot 2.0.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+    <list default="true" id="868e1bc7-d2cf-4321-8444-628b09c4cc27" name="Changes" comment="get jkes by categories">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/handlers/user.py" beforeDir="false" afterPath="$PROJECT_DIR$/handlers/user.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/keyboards/inline_keyboards.py" beforeDir="false" afterPath="$PROJECT_DIR$/keyboards/inline_keyboards.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.mo" beforeDir="false" afterPath="$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.mo" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.po" beforeDir="false" afterPath="$PROJECT_DIR$/locales/en/LC_MESSAGES/jokebot.po" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/locales/jokebot.pot" beforeDir="false" afterPath="$PROJECT_DIR$/locales/jokebot.pot" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.mo" beforeDir="false" afterPath="$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.mo" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.po" beforeDir="false" afterPath="$PROJECT_DIR$/locales/uk/LC_MESSAGES/jokebot.po" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/log/bot_log.log" beforeDir="false" afterPath="$PROJECT_DIR$/log/bot_log.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/middlewares/throttling_middleware.py" beforeDir="false" afterPath="$PROJECT_DIR$/middlewares/throttling_middleware.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/services/db.py" beforeDir="false" afterPath="$PROJECT_DIR$/services/db.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/services/jokes.db" beforeDir="false" afterPath="$PROJECT_DIR$/services/jokes.db" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -61,7 +49,7 @@
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "WebServerToolWindowFactoryState": "false",
     "deletionFromPopupRequiresConfirmation": "false",
-    "git-widget-placeholder": "master",
+    "git-widget-placeholder": "categories",
     "last_opened_file_path": "/Users/makser/Desktop/Python/Joke-Bot",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
@@ -401,7 +389,15 @@
       <option name="project" value="LOCAL" />
       <updated>1692607971379</updated>
     </task>
-    <option name="localTasksCounter" value="36" />
+    <task id="LOCAL-00036" summary="get jkes by categories">
+      <option name="closed" value="true" />
+      <created>1692711354241</created>
+      <option name="number" value="00036" />
+      <option name="presentableId" value="LOCAL-00036" />
+      <option name="project" value="LOCAL" />
+      <updated>1692711354241</updated>
+    </task>
+    <option name="localTasksCounter" value="37" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -458,6 +454,7 @@
     <MESSAGE value="update some translations" />
     <MESSAGE value="update bot site link" />
     <MESSAGE value="deleted en jokes" />
-    <option name="LAST_COMMIT_MESSAGE" value="deleted en jokes" />
+    <MESSAGE value="get jkes by categories" />
+    <option name="LAST_COMMIT_MESSAGE" value="get jkes by categories" />
   </component>
 </project>
\ No newline at end of file
